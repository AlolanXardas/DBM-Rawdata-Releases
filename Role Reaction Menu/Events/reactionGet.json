{
  "name": "reactionGet",
  "temp": "msgReaction",
  "event-type": "28",
  "_id": "zimku",
  "actions": [
    {
      "reaction": "1",
      "varName": "msgReaction",
      "info": "0",
      "storage": "1",
      "varName2": "messageRct",
      "name": "Store Reaction Info"
    },
    {
      "behavior": "1",
      "interpretation": "1",
      "code": "const reaction = tempVars('msgReaction');\nconst msgRct = tempVars('messageRct');\nvar rectarray = globalVars('reactionRoleInf');\nvar usrWhoReacted = reaction.users.last();\nconst _this = this;\nvar messageSent = 'Successfully added the role {roleName} in {server}';\n// The only variables that work rn, {rolename} and {server}\nvar interval;\n\n// Setings\n\nconst dmUserAfter = true; // Default, can be changed to false\n\n//\nconsole.log(rectarray)\nasync function checkRoles() {\n    try {\n        if (usrWhoReacted.id != client.user.id) {\n            if (usrWhoReacted.data('cooldownData.reactionMenu') != 1) {\n                if (rectarray[msgRct.id] != null) {\n                    var newArr = rectarray[msgRct.id];\n                    console.log(newArr)\n                    for (io = 0; io < newArr.length; io++) {\n                        console.log(reaction.emoji.name)\n                        if (newArr[io][0] == reaction.emoji.name || newArr[io][0].name == reaction.emoji.name) {\n                            var newUsr = await msgRct.guild.fetchMember(usrWhoReacted);\n                            var checkRole = await msgRct.guild.roles.get(newArr[io][1])\n                            if (checkRole != null) {\n                                if (newUsr.roles.has(newArr[io][1])) {\n                                    usrWhoReacted.setData('cooldownData.reactionMenu', '1');\n                                    rectarray = globalVars('reactionRoleInf');\n                                    var userarrayplacement;\n                                    console.log('test')\n                                    if (!isNaN(rectarray[msgRct.id][rectarray[msgRct.id].length - 1][1])) {\n                                        console.log('test1')\n                                        userarrayplacement = rectarray[msgRct.id].length\n                                    } else {\n                                        userarrayplacement = rectarray[msgRct.id].length - 1\n                                        console.log('test2')\n                                    }\n                                    console.log(userarrayplacement)\n                                    rectarray[msgRct.id][userarrayplacement] = await reaction.users.array();\n                                    _this.storeValue(rectarray, 3, 'reactionRoleInf', cache)\n                                    interval = setInterval(resetTimer, 1000)\n                                    break;\n                                } else {\n                                    usrWhoReacted.setData('cooldownData.reactionMenu', '1');\n                                    rectarray[msgRct.id][userarrayplacement] = await reaction.users.array();\n                                    _this.storeValue(rectarray, 3, 'reactionRoleInf', cache)\n\n                                    newUsr.addRole(checkRole);\n                                    if (dmUserAfter) {\n                                        messageSent = messageSent.replace(/{roleName}/g, checkRole.name);\n                                        messageSent = messageSent.replace(/{server}/g, msgRct.guild.name);\n                                        newUsr.send(messageSent);\n                                    }\n                                    interval = setInterval(resetTimer, 500)\n                                    break;\n                                }\n                            } else {\n                                delete rectarray[msgRct.id];\n                                _this.storeValue(rectarray, 3, 'reactionRoleInf', cache);\n\n                                msgRct.edit({\n                                    embed: {\n                                        color: 0xff0000,\n                                        title: \"Role Reaction Menu\",\n                                        description: `An error has occured.\\nOne of the roles, role name - ${newArr[io][2]} does not exist anymore.\\nIn turn, this embed has now shutdown.\\nPlease remake the embed.`,\n                                        timestamp: new Date()\n                                    }\n                                });\n                                _this.callNextAction(cache);\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        } else {\n            usrWhoReacted.setData('cooldownData.reactionMenu', '0');\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nfunction resetTimer() {\n    usrWhoReacted.setData('cooldownData.reactionMenu', '0');\n    clearInterval(interval);\n}\n\ncheckRoles();",
      "storage": "0",
      "varName": "",
      "name": "Run Script"
    },
    {
      "storage": "3",
      "varName": "reactionRoleInf",
      "name": "Save Variable"
    }
  ]
}